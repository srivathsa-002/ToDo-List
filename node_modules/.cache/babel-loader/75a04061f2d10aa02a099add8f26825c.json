{"ast":null,"code":"var _jsxFileName = \"/home/srivathsa/Downloads/ReAcT_____P/Rrar/React_Auth0-Todo/src/components/molecule/Todo.js\";\nimport React from \"react\";\nimport \"../../styles/components/option.css\";\nimport EditIcon from \"../atoms/EditIcon\";\nimport DeleteIcon from \"../atoms/DeleteIcon\";\nimport CheckboxIcon from \"../atoms/CheckboxIcon\";\nimport UpdateIcon from \"../atoms/UpdateIcon\";\nimport Para from \"../atoms/Para\";\nexport default class Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false\n    };\n    this.renderForm = this.renderForm.bind(this);\n    this.renderTodos = this.renderTodos.bind(this);\n    this.toggleState = this.toggleState.bind(this);\n    this.updateTodo = this.updateTodo.bind(this);\n  }\n\n  updateTodo(event) {\n    event.preventDefault(); // console.log(this.props.todo.id, this.input.value);\n\n    this.props.editTodo(this.props.todo, this.input.value);\n    this.toggleState();\n  }\n\n  toggleState() {\n    const {\n      isEditing\n    } = this.state;\n    this.setState({\n      isEditing: !isEditing\n    });\n  }\n\n  handleNewVal(newVal) {\n    console.log(newVal);\n    this.updateTodo(); // this.props.editTodo(this.props.todo, this.newVal);\n    // this.toggleState();\n  }\n\n  renderForm() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"option\",\n      onSubmit: this.updateTodo,\n      \"data-testid\": \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: val => {\n        this.input = val;\n      },\n      defaultValue: this.props.todo.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(UpdateIcon, {\n      placement: \"bottom\",\n      click: this.updateTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderTodos() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"option\",\n      \"data-testid\": \"todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"option-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Para, {\n      val: this.props.todo.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"option-materials\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      placement: \"bottom\",\n      click: () => this.toggleState(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CheckboxIcon, {\n      placement: \"bottom\",\n      checked: this.props.todo.complete ? true : false,\n      onClick: this.props.toggleComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(DeleteIcon, {\n      placement: \"bottom\",\n      click: this.props.onDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  render() {\n    const {\n      isEditing\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, isEditing ? this.renderForm() : this.renderTodos());\n  }\n\n}","map":{"version":3,"sources":["/home/srivathsa/Downloads/ReAcT_____P/Rrar/React_Auth0-Todo/src/components/molecule/Todo.js"],"names":["React","EditIcon","DeleteIcon","CheckboxIcon","UpdateIcon","Para","Todo","Component","constructor","props","state","isEditing","renderForm","bind","renderTodos","toggleState","updateTodo","event","preventDefault","editTodo","todo","input","value","setState","handleNewVal","newVal","console","log","val","text","complete","toggleComplete","onDelete","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../../styles/components/option.css\";\nimport EditIcon from \"../atoms/EditIcon\";\nimport DeleteIcon from \"../atoms/DeleteIcon\";\nimport CheckboxIcon from \"../atoms/CheckboxIcon\";\nimport UpdateIcon from \"../atoms/UpdateIcon\";\nimport Para from \"../atoms/Para\";\n\nexport default class Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false\n    }\n    this.renderForm = this.renderForm.bind(this);\n    this.renderTodos = this.renderTodos.bind(this);\n    this.toggleState = this.toggleState.bind(this);\n    this.updateTodo = this.updateTodo.bind(this);\n  }\n\n  updateTodo(event) {\n    event.preventDefault();\n   // console.log(this.props.todo.id, this.input.value);\n    this.props.editTodo(this.props.todo, this.input.value);\n    this.toggleState();\n  }\n\n  toggleState() {\n    const { isEditing } = this.state;\n    this.setState({\n      isEditing: !isEditing\n    })\n  }\n\n  handleNewVal(newVal) {\n    console.log(newVal);\n    this.updateTodo();\n    // this.props.editTodo(this.props.todo, this.newVal);\n    // this.toggleState();\n  }\n\n  renderForm() {\n    return (\n      <form className=\"option\" onSubmit={this.updateTodo} data-testid=\"form\">\n        {/* <UpdateInputBox\n          onNewVal={this.handleNewVal}\n          defaultValue={this.props.todo.text}\n        /> */}\n        <input \n          type=\"text\" \n          ref={(val) => {\n            this.input = val\n          }} \n          defaultValue={this.props.todo.text} \n        />\n        <UpdateIcon placement=\"bottom\" click={this.updateTodo} />\n        {/* <Tooltip title=\"Update Todo\" placement=\"bottom\" arrow>\n          <div>\n            <IconButton onClick={this.updateTodo}>\n              <ArrowUpwardIcon />\n            </IconButton>\n          </div>\n        </Tooltip> */}\n      </form>\n    )\n  }\n\n  renderTodos() {\n    return (\n      <div className=\"option\" data-testid=\"todo\">\n        <div className=\"option-text\">\n          <Para val={this.props.todo.text}/>\n          {/* <p style={{ margin: \"0\" }}>{this.props.todo.text}</p> */}\n        </div>\n        <div className=\"option-materials\">\n          <EditIcon placement=\"bottom\" click={() => this.toggleState()} />\n          {/*<Tooltip title=\"Edit ToDo\" placement=\"bottom\" arrow>\n            <div>\n              <IconButton>\n                <CreateOutlinedIcon onClick={() => this.toggleState()} />\n              </IconButton>\n            </div>\n          </Tooltip> */}\n          <CheckboxIcon placement=\"bottom\" checked={this.props.todo.complete ? true : false} onClick={this.props.toggleComplete} />\n          {/* <Tooltip title=\"Mark as Complete\" placement=\"bottom\" arrow>\n            <div>\n              <IconButton>\n                <CheckBox isChecked={this.props.todo.complete ? true : false} onClick={this.props.toggleComplete} />\n              </IconButton>\n            </div>\n          </Tooltip> */}\n          <DeleteIcon placement=\"bottom\" click={this.props.onDelete} />\n          {/* <Tooltip title=\"Delete ToDo\" placement=\"bottom\" arrow>\n            <div>\n              <IconButton>\n                <DeleteOutlineOutlinedIcon onClick={this.props.onDelete} />\n              </IconButton>\n            </div>\n          </Tooltip> */}\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { isEditing } = this.state;\n    return (\n      <section>\n        {\n          isEditing ? this.renderForm() : this.renderTodos()\n        }\n      </section>\n    );\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}